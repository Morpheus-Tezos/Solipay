{"version":3,"sources":["getWeb3.js","Admin.jsx","Public.jsx","UserVoting.jsx","AdminVoting.jsx","App.jsx","serviceWorker.js","index.js"],"names":["web3Instance","getWeb3","Promise","resolve","reject","window","ethereum","Web3","enable","then","_","catch","err","web3","console","log","provider","providers","WebsocketProvider","getContract","contract","a","eth","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","Admin","account","setMsg","useState","addr1","setAddr1","addr2","setAddr2","lpAddress","addressContract","proxyaddr","setProxyAddress","amount","setAmount","amount2","setAmount2","outputValue","setOutputValue","tolerance","setTolerance","balance1","setBalance1","balance2","setBalance2","symbol1","setSymbol1","symbol2","setSymbol2","lpAmount","setlpAmount","lpBalance","setLpBalance","lpPriceT0","setLpPriceT0","useEffect","balanceView","Stacking","methods","getBalance","call","balanceCall1","balanceCall2","balanceLpCall","utils","fromWei","toString","getSymbols","getSymbol","symbolA","symbolB","amountMin","x","setContractAddress","setStackingAddress","send","from","ProxySimple","TokenAd","setTokenAd","approveUni","toApprove","toWei","approveERC20Uni","on","error","tx","approveProxy","transfer","transferERC20","sendLP","amountDcm","updatePrice","OracleSimplePair","update","convert","toConvert","consult","result","output","stacking","amountDesiredA","amountDesiredB","amountMinA","amountMinB","deadline","Date","now","addLiquidity","Liquidity","Number","lpPricing","toPrice","getLpPrice","price","swap","amountIn","amountOutMin","swapTokens","swaped","exitStaking","liquidity","amountAmin","amountBmin","removeLiquidity","removed","Grid","direction","container","spacing","style","paddingTop","paddingLeft","item","className","Typography","TextField","id","label","defaultValue","onChange","target","value","color","gutterBottom","Button","variant","onClick","type","placeholder","theme","createMuiTheme","palette","primary","green","secondary","amber","Public","montant","setMontant","deposit","setDeposit","montantRetirer","record","setRecord","share","setShare","total","setTotal","activeStep","setActiveStep","pastDeposits","getVotingPower","getPoolShare","Borrow","status","response","getStep","getAccounts","accounts","getUserDeposits","xDeposit","updateXprice","depositTotal","votingPower","getTotalVotingPower","totalVotingPower","vot","pourcentage","deposite","getPastEvents","filter","client","fromBlock","toBlock","depositsRecorded","depositRecord","i","length","deposited","returnValues","getBlock","blockNumber","block","date","timestamp","push","hash","transactionHash","moment","locale","format","stamp","setTimeout","Withdraw","withdrawPending","src","xs","rowsMin","ThemeProvider","map","key","Card","CardActionArea","CardMedia","component","alt","height","image","title","CardContent","CardActions","TabPanel","props","children","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","useStyles","makeStyles","root","backgroundColor","background","paper","maxWidth","maxheight","media","UserVoting","classes","setValue","users","setUsers","getVoters","entities","voters","soliAddress","votersInfo","getVotersPower","getVotersProp","voter","power","proposal","vote","Id","addVote","Stepper","alternativeLabel","Step","StepLabel","stepIndex","getStepContent","AppBar","position","Tabs","event","newValue","indicatorColor","textColor","aria-label","Tab","axis","onChangeIndex","dir","size","disabled","href","GREENPEACE","width","backButton","marginRight","instructions","marginTop","marginBottom","AdminVoting","addr","setAddr","description","setDescription","steps","next","nextStep","registeringVoters","setEntity","registerProposal","registerLoanRequest","winningProposal","getWinningProposal","TextareaAutosize","borderRadius","rowsMax","App","wallet","useWallet","setAccount","msg","connect","Toolbar","IconButton","edge","fontSize","exact","path","Snackbar","autoHideDuration","open","onClose","message","chainId","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1408c68.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\n\r\nlet web3Instance;\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    //window.addEventListener(\"load\", async () => {\r\n      //Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        web3Instance = web3Instance || new Web3(window.ethereum);\r\n        //Request account access if needed\r\n        resolve(web3Instance);\r\n        window.ethereum.enable()\r\n          .then(_ => resolve(web3Instance))\r\n          .catch(err => reject(err))\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.WebsocketProvider(\r\n          \"ws://127.0.0.1:8545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    //});\r\n  });\r\n\r\nexport default getWeb3;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport OracleSimplePair from \"./build/contracts/OracleSimplePair.json\";\r\nimport Stacking from \"./build/contracts/Stacking.json\";\r\nimport ProxySimple from \"./build/contracts/ProxySimple.json\";\r\nimport getWeb3 from \"./getWeb3\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\n\r\n\r\nimport getMessageError from \"./getMessageError\";\r\nimport { rgbToHex } from \"@material-ui/core\";\r\n\r\nconst getContract = async (contract) => {\r\n  const web3 = await getWeb3();\r\n\r\n  // Get the contract instance.\r\n  const networkId = await web3.eth.net.getId();\r\n  const deployedNetwork = contract.networks[networkId];\r\n  const instance = new web3.eth.Contract(\r\n    contract.abi,\r\n    deployedNetwork && deployedNetwork.address\r\n  );\r\n\r\n  return instance;\r\n};\r\n\r\nfunction Admin({ account, setMsg }) {\r\n  const [addr1, setAddr1] = useState(\r\n    \"0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa\"\r\n  );\r\n  const [addr2, setAddr2] = useState(\r\n    \"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984\"\r\n  );\r\n  const [lpAddress, setlpAddress] = useState(\r\n    \"0xFA73472326E0e0128E2CA6CeB1964fd77F4AE78d\"\r\n  );\r\n  const [addressContract, setAddressContract] = useState(\r\n    \"0x327F793f4008515Bebf9ec8b7DEcd6f02687f1D2\"\r\n  );\r\n  const [proxyaddr, setProxyAddress] = useState(\r\n    \"0x466F4b0f1a563B071cE0423fAc04678976639093\"\r\n  );\r\n  const [amount, setAmount] = useState(0);\r\n  const [amount2, setAmount2] = useState(0);\r\n  const [outputValue, setOutputValue] = useState(0);\r\n  const [tolerance, setTolerance] = useState(0);\r\n  const [balance1, setBalance1] = useState(0);\r\n  const [balance2, setBalance2] = useState(0);\r\n  const [symbol1, setSymbol1] = useState(\"TOKEN\");\r\n  const [symbol2, setSymbol2] = useState(\"TOKEN\");\r\n  const [lpAmount, setlpAmount] = useState(0);\r\n  const [lpBalance, setLpBalance] = useState(0);\r\n  const [lpPriceT0, setLpPriceT0] = useState(0);\r\n  const [lpPriceT1, setLpPriceT1] = useState(0);\r\n  const [decimal1, setDecimal1] = useState(18);\r\n  const [decimal2, setDecimal2] = useState(18);\r\n\r\n  useEffect(() => {\r\n    // const decimals = async () => {\r\n    //   const contract = await getContract(Stacking);\r\n    //   const web3 = await getWeb3();\r\n    //   const decimals1 = await contract.methods.getDecimals(addr1).call();\r\n    //   const decimals2 = await contract.methods.getDecimals(addr2).call();\r\n    //   setDecimal1(Number(decimals1));\r\n    //   setDecimal2(Number(decimals2));\r\n    // }\r\n\r\n    const balanceView = async () => {\r\n      const contract = await getContract(Stacking);\r\n      const web3 = await getWeb3();\r\n      const balanceCall1 = await contract.methods.getBalance(addr1).call();\r\n      const balanceCall2 = await contract.methods.getBalance(addr2).call();\r\n      const balanceLpCall = await contract.methods.getBalance(lpAddress).call();\r\n      setBalance1(web3.utils.fromWei(balanceCall1.toString(), \"ether\"));\r\n      setBalance2(web3.utils.fromWei(balanceCall2.toString(), \"ether\"));\r\n      setLpBalance(web3.utils.fromWei(balanceLpCall.toString(), \"ether\"));\r\n    };\r\n\r\n    const getSymbols = async () => {\r\n      const contract = await getContract(Stacking);\r\n      const web3 = await getWeb3();\r\n      const symbolA = await contract.methods.getSymbol(addr1).call();\r\n      const symbolB = await contract.methods.getSymbol(addr2).call();\r\n      setSymbol1(symbolA.toString());\r\n      setSymbol2(symbolB.toString());\r\n    };\r\n\r\n    //decimals();\r\n    balanceView();\r\n    getSymbols();\r\n  }, []);\r\n\r\n  const amountMin = (x) => {\r\n    let tolerated = (x * tolerance) / 100;\r\n    let MinimalAmount = x - tolerated;\r\n    return MinimalAmount;\r\n  };\r\n\r\n  const setContractAddress = async () => {\r\n    let contract = await getContract(Stacking);\r\n    const web3 = await getWeb3();\r\n    //const addr = await contract.address;\r\n    await contract.methods.setStackingAddress(addressContract).send({ from: account });\r\n    contract = await getContract(ProxySimple);\r\n    await contract.methods.setStackingAddress(addressContract).send({ from: account });\r\n  };\r\n\r\n  const TokenAd = async () => {\r\n    const contract = await getContract(ProxySimple);\r\n    await contract.methods.setTokenAd(addr1).send({from: account});\r\n  }\r\n\r\n  const setProxySimpleAddress = async () => {\r\n    const contract = await getContract(Stacking);\r\n    const web3 = await getWeb3();\r\n    const addr = proxyaddr;\r\n    await contract.methods.setProxyAddress(addr).send({ from: account });\r\n  };\r\n\r\n  const approveUni = async (address) => {\r\n    const contract = await getContract(Stacking);\r\n    const web3 = await getWeb3();\r\n    const toApprove = web3.utils.toWei(\"999999\", \"ether\");\r\n    const approved = await contract.methods\r\n      .approveERC20Uni(address, toApprove)\r\n      .send({ from: account })\r\n      .on(\"error\", function (error) {\r\n        setMsg(\"error\");\r\n      })\r\n      .then(function (tx) {\r\n        setMsg(`UniRouter approved ${amount}`);\r\n      });\r\n  };\r\n\r\n  const approveProxy = async () => {\r\n    const contract = await getContract(Stacking);\r\n    const web3 = await getWeb3();\r\n    const toApprove = web3.utils.toWei(\"999999\", \"ether\");\r\n    const approved = await contract.methods\r\n      .approveProxy(addr1, toApprove)\r\n      .send({ from: account })\r\n      .on(\"error\", function (error) {\r\n        setMsg(\"error\");\r\n      })\r\n      .then(function (tx) {\r\n        setMsg(`UniRouter approved ${amount}`);\r\n      });\r\n  };\r\n\r\n  const transfer = async () => {\r\n    const contract = await getContract(Stacking);\r\n    const web3 = await getWeb3();\r\n    const transferERC20 = await contract.methods\r\n      .transferERC20(addr1, proxyaddr, amount)\r\n      .send({ from: account })\r\n      .on(\"error\", function (error) {\r\n        setMsg(\"error\");\r\n      })\r\n      .then(function (tx) {\r\n        setMsg(`transfered ${amount}`);\r\n      });\r\n  };\r\n\r\n  const sendLP = async () => {\r\n    const contract = await getContract(Stacking);\r\n    const web3 = await getWeb3();\r\n    const amountDcm = web3.utils.toWei(amount, \"ether\");\r\n    const send = await contract.methods\r\n    .sendLP(addr1, account, amountDcm)\r\n    .send({ from: account })\r\n    .on(\"error\", function (error) {\r\n      setMsg(\"error\");\r\n    })\r\n    .then(function (tx) {\r\n      setMsg(`prices updated`);\r\n    });\r\n  };\r\n\r\n\r\n  const updatePrice = async () => {\r\n    const contract = await getContract(OracleSimplePair);\r\n    const web3 = await getWeb3();\r\n    await contract.methods\r\n      .update()\r\n      .send({ from: account })\r\n      .on(\"error\", function (error) {\r\n        setMsg(\"error\");\r\n      })\r\n      .then(function (tx) {\r\n        setMsg(`prices updated`);\r\n      });\r\n  };\r\n\r\n  const convert = async () => {\r\n    let contract = await getContract(Stacking);\r\n    const web3 = await getWeb3();\r\n    contract = await getContract(OracleSimplePair);\r\n    const toConvert = web3.utils.toWei(amount.toString(), \"ether\");\r\n    const output = await contract.methods\r\n      .consult(addr1, toConvert)\r\n      .call({ from: account }, function (error, result) {\r\n        if (error == null) {\r\n          setMsg(`prices updated`);\r\n        } else {\r\n          setMsg(`error`);\r\n        }\r\n      });\r\n    setOutputValue(web3.utils.fromWei(output.toString(), \"ether\"));\r\n  };\r\n\r\n  const stacking = async () => {\r\n    const contract = await getContract(Stacking);\r\n    const web3 = await getWeb3();\r\n    let amountDesiredA = web3.utils.toWei(amount.toString(), \"ether\");\r\n    let amountDesiredB = web3.utils.toWei(amount2.toString(), \"ether\");\r\n    let amountMinA = web3.utils.toWei(amountMin(amount).toString(), \"ether\");\r\n    let amountMinB = web3.utils.toWei(amountMin(amount2).toString(), \"ether\");\r\n    let deadline = Date.now() + 180; //set deadline at 3min;\r\n    const add = await contract.methods\r\n      .addLiquidity(\r\n        addr1,\r\n        addr2,\r\n        amountDesiredA,\r\n        amountDesiredB,\r\n        amountMinA,\r\n        amountMinB,\r\n        deadline\r\n      )\r\n      .send({ from: account })\r\n      .on(\"error\", function (error) {\r\n        setMsg(\"error\");\r\n      })\r\n      .then(function (tx) {\r\n        console.log(tx);\r\n        const Liquidity = Number(tx);\r\n        setMsg(`liquidity added ${Liquidity}`);\r\n      });\r\n  };\r\n  const lpPricing = async () => {\r\n    const contract = await getContract(OracleSimplePair);\r\n    const web3 = await getWeb3();\r\n    const toPrice = web3.utils.toWei(lpBalance.toString(), \"ether\");\r\n    const price = await contract.methods.getLpPrice(lpAddress, toPrice).call();\r\n    setLpPriceT0(web3.utils.fromWei(price.toString(), \"ether\"));\r\n    console.log(lpPriceT0);\r\n  };\r\n\r\n  const swap = async () => {\r\n    const contract = await getContract(Stacking);\r\n    const web3 = await getWeb3();\r\n    let amountIn = web3.utils.toWei(amount.toString(), \"ether\");\r\n    let amountOutMin = web3.utils.toWei(amountMin(amount2).toString(), \"ether\");\r\n    let deadline = Date.now() + 180; //set deadline at 3min;\r\n    let swap = await contract.methods\r\n      .swapTokens(addr1, addr2, amountIn, amountOutMin, deadline)\r\n      .send({ from: account })\r\n      .on(\"error\", function (error) {\r\n        setMsg(\"error\");\r\n      })\r\n      .then(function (tx) {\r\n        console.log(tx);\r\n        const swaped = Number(tx);\r\n        setMsg(`swap confirmed you get ${swaped}`);\r\n      });\r\n  };\r\n\r\n  const exitStaking = async () => {\r\n    const contract = await getContract(Stacking);\r\n    const web3 = await getWeb3();\r\n    const liquidity = web3.utils.toWei(lpAmount.toString(), \"ether\");\r\n    const amountAmin = web3.utils.toWei(amountMin(amount).toString(), \"ether\");\r\n    const amountBmin = web3.utils.toWei(amountMin(amount2).toString(), \"ether\");\r\n    let deadline = Date.now() + 180; //set deadline at 3min;\r\n    const removed = await contract.methods\r\n      .removeLiquidity(\r\n        addr1,\r\n        addr2,\r\n        liquidity,\r\n        amountAmin,\r\n        amountBmin,\r\n        deadline\r\n      )\r\n      .send({ from: account })\r\n      .on(\"error\", function (error) {\r\n        setMsg(\"error\");\r\n      })\r\n      .then(function (result) {\r\n        console.log(result);\r\n        setMsg(`removed liquidity ${removed}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n\r\n // VIEW\r\n <Grid\r\n   direction=\"row\"\r\n   container\r\n   spacing={5}\r\n   style={{ paddingTop: \"50px\", paddingLeft: \"50px\"}}\r\n >\r\n          <Grid item>\r\n            <Grid className=\"settingCard\">\r\n            <Typography>\r\n              <h2>Token Pair</h2>\r\n              </Typography>\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"AdresseTokenA\"\r\n                defaultValue=\"0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa\"\r\n                onChange={({ target }) => setAddr1(target.value)}\r\n              />\r\n\r\n            <Typography color=\"secondary\" gutterBottom>\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"AdresseTokenB\"\r\n                defaultValue=\"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984\"\r\n                onChange={({ target }) => setAddr2(target.value)}\r\n              />\r\n            </Typography>\r\n            <Typography color=\"secondary\" gutterBottom>\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"proxyAddress\"\r\n                defaultValue=\"0x21a0BF5f05b5AAab451e0B8c6D57145cc3240942\"\r\n                onChange={({ target }) => setProxyAddress(target.value)}\r\n              />\r\n            </Typography>\r\n              <br></br>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => approveProxy()}\r\n              >\r\n                Approve\r\n              </Button>\r\n          </Grid>\r\n        </Grid>\r\n          <Grid item>\r\n            <Grid className=\"settingCard\">\r\n              <Typography>\r\n                <h2>Balance</h2>\r\n              </Typography>\r\n              <br></br>\r\n              <Typography color=\"primary\" gutterBottom>\r\n                {balance1} {symbol1}\r\n              </Typography>\r\n              <br></br>\r\n              <Typography color=\"primary\" gutterBottom>\r\n                {balance2} {symbol2}\r\n              </Typography>\r\n              <br></br>\r\n              <Typography color=\"secondary\" gutterBottom>\r\n                {lpBalance} LP\r\n              </Typography>\r\n              <Typography color=\"secondary\" gutterBottom>\r\n                LP Value {lpPriceT0}\r\n              </Typography>\r\n              <br></br>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid className=\"settingCard\">\r\n            <Typography>\r\n              <h2>Manage</h2>\r\n            </Typography>\r\n            <Typography color=\"secondary\" gutterBottom>\r\n              <input\r\n                type=\"number\"\r\n                id=\"standard-basic\"\r\n                label=\"TokenA\"\r\n                onChange={async ({ target }) => await setAmount(target.value)}\r\n              />{\" \"}\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => approveUni(addr1)}\r\n              >\r\n                Approve\r\n              </Button>\r\n            </Typography>\r\n            <Typography color=\"secondary\" gutterBottom>\r\n              <input\r\n                type=\"number\"\r\n                id=\"standard-basic\"\r\n                label=\"TokenB\"\r\n                placeholder={outputValue}\r\n                onChange={async ({ target }) => await setAmount2(target.value)}\r\n              />{\" \"}\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => approveUni(addr2)}\r\n              >\r\n                Approve\r\n              </Button>\r\n            </Typography>\r\n            <Typography>estimated output {outputValue}</Typography>\r\n            <Typography>\r\n              <input\r\n                type=\"number\"\r\n                id=\"standard-basic\"\r\n                label=\"LP\"\r\n                placeholder={lpAmount}\r\n                onChange={async ({ target }) => await setlpAmount(target.value)}\r\n              />{\" \"}\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => approveUni(lpAddress)}\r\n              >\r\n                Approve\r\n              </Button>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid className=\"settingCard\">\r\n            <Typography>\r\n                  <h2>Operations</h2>\r\n                </Typography>\r\n                <Typography>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => swap()}\r\n                  >\r\n                    SWAP\r\n                  </Button>\r\n                </Typography>\r\n                <br></br>\r\n                <Typography>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => transfer()}\r\n                  >\r\n                    TRANSFER\r\n                  </Button>\r\n                </Typography>\r\n                <br></br>\r\n                <Typography>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => stacking()}\r\n                  >\r\n                    ADD LIQUIDITY\r\n                  </Button>\r\n                </Typography>\r\n                <br></br>\r\n                <Typography>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => exitStaking()}\r\n                  >\r\n                    REMOVE LIQUIDITY\r\n                  </Button>\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid className=\"settingCard\">\r\n                <Typography>\r\n                  <h2>Settings</h2>\r\n                </Typography>\r\n                <br></br>\r\n                <Typography>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => setContractAddress()}\r\n                  >\r\n                    Set Contract Address\r\n                  </Button>\r\n                </Typography>\r\n                <br></br>\r\n                <Typography>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => updatePrice()}\r\n                  >\r\n                    updatePrices\r\n                  </Button>\r\n                </Typography>\r\n                <br></br>\r\n                <Typography>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => convert()}\r\n                  >\r\n                    convert\r\n                  </Button>\r\n                </Typography>\r\n                <br></br>\r\n                <Typography>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => lpPricing()}\r\n                  >\r\n                    Refresh LP Price\r\n                  </Button>\r\n                </Typography>\r\n                <br></br>\r\n                <Typography>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => TokenAd()}\r\n                  >\r\n                    Token Accepted\r\n                  </Button>\r\n                </Typography>\r\n                <br></br>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => sendLP()}\r\n                  >\r\n                    SEND LP\r\n                  </Button>\r\n                <Typography>\r\n                  Tolerance\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"standard-basic\"\r\n                    label=\"tolerance\"\r\n                    onChange={({ target }) => setTolerance(target.value)}\r\n                  />\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n        </Grid>\r\n\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport getWeb3 from \"./getWeb3\";\r\nimport moment from 'moment';\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\r\nimport \"./App.css\";\r\nimport ProxySimple from \"./build/contracts/ProxySimple.json\";\r\nimport Stacking from \"./build/contracts/Stacking.json\";\r\nimport { GridList } from \"@material-ui/core\";\r\nimport Borrow from \"./build/contracts/Borrow.json\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { green, amber } from '@material-ui/core/colors';\r\n\r\n\r\nconst getContract = async (contract) => {\r\n  const web3 = await getWeb3();\r\n\r\n  // Get the contract instance.\r\n  const networkId = await web3.eth.net.getId();\r\n  const deployedNetwork = contract.networks[networkId];\r\n  const instance = new web3.eth.Contract(\r\n    contract.abi,\r\n    deployedNetwork && deployedNetwork.address\r\n  );\r\n\r\n  return instance;\r\n};\r\n\r\nconst theme = createMuiTheme({\r\npalette: {\r\n  primary: green,\r\n  secondary: amber,\r\n},\r\n});\r\n\r\nfunction Public({ account, setMsg }) {\r\n  // Function deposite => params : Nbjour & montant\r\n  const [montant, setMontant] = useState(0);\r\n  // CI DESSOUS function retrait en attente True/False\r\n  //const [withdrawPending, setWithdrawPending] = useState(false);\r\n  const [deposit, setDeposit] = useState(0);\r\n  // retrait\r\n  const [montantRetirer, setMontantRetirer] = useState(0);\r\n\r\n  const [clients, setClients] = useState([]);\r\n\r\n  const [record, setRecord] = useState([]);\r\n\r\n  const [share, setShare] = useState(0);\r\n\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const [activeStep, setActiveStep] = useState(0);\r\n\r\n  useEffect(() => {\r\n\r\n    balanceView();\r\n    pastDeposits();\r\n    getVotingPower();\r\n    getPoolShare();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n  const getStep = async () => {\r\n    const contract = await getContract(Borrow);\r\n    const response = await contract.methods.status().call();\r\n    setActiveStep(Number(response));\r\n  }\r\n\r\n  getStep();\r\n}, []);\r\n\r\n  const balanceView = async () => {\r\n    let contract = await getContract(ProxySimple);\r\n    const web3 = await getWeb3();\r\n    const accounts = await web3.eth.getAccounts();\r\n    console.log(\"compte\", accounts);\r\n    console.log(contract.methods);\r\n    const xDeposit = await contract.methods\r\n      .getUserDeposits(accounts[0])\r\n      .call();\r\n    const x = await contract.methods.updateXprice(0).call();\r\n    const z = 1000000;\r\n    let depositTotal = (Number(xDeposit) * Number(x))/ z;\r\n    depositTotal = web3.utils.fromWei(depositTotal.toString(), \"ether\");\r\n    setDeposit(depositTotal);\r\n  }\r\n\r\n  const approval = async () => {\r\n    const contract = await getContract(ProxySimple);\r\n    const web3 = await getWeb3();\r\n    const amount = web3.utils.toWei(montant.toString(), 'ether');\r\n    const appr = await contract.methods\r\n    .approveStacking(amount)\r\n    .send({ from: account })\r\n    .on(\"error\", function (error) {\r\n      setMsg(\"error\");\r\n    })\r\n    .then(function (tx) {\r\n      setMsg(`approve ${montant}`);\r\n      console.log(tx);\r\n    });\r\n  }\r\n\r\n  const getVotingPower = async () => {\r\n    const contract = await getContract(ProxySimple);\r\n    const web3 = await getWeb3();\r\n    const accounts = await web3.eth.getAccounts();\r\n    let votingPower = await contract.methods.getUserDeposits(accounts[0]).call();\r\n    votingPower = web3.utils.fromWei(votingPower.toString(), \"ether\");\r\n    return votingPower;\r\n  }\r\n\r\n  const getPoolShare = async () => {\r\n    const contract = await getContract(ProxySimple);\r\n    const web3 = await getWeb3();\r\n    let totalVotingPower = await contract.methods.getTotalVotingPower().call();\r\n    totalVotingPower = web3.utils.fromWei(totalVotingPower.toString(), \"ether\");\r\n    const vot = await getVotingPower();\r\n    console.log(vot);\r\n    const pourcentage = (vot * 100)/ totalVotingPower ;\r\n    console.log(pourcentage);\r\n    setTotal(totalVotingPower);\r\n    setShare(pourcentage);\r\n  }\r\n\r\n  // Rappelle les \".call\" c'est juste pour voir \"quand la function du contrat est en view\"\r\n  // .Send c'est pour modifier l'etat de la function\r\n  const deposite = async () => {\r\n    const contract = await getContract(ProxySimple);\r\n    const web3 = await getWeb3();\r\n    const amount = web3.utils.toWei(montant, 'ether');\r\n    const depot = await contract.methods\r\n      .deposit(amount)\r\n      .send({ from: account })\r\n      .on(\"error\", function (error) {\r\n        setMsg(\"error\");\r\n      })\r\n      .then(function (tx) {\r\n        setMsg(`Deposite ${montant}`);\r\n        console.log(tx);\r\n      });\r\n  }\r\n\r\n  const pastDeposits = async () => {\r\n    const contract = await getContract(ProxySimple);\r\n    const web3 = await getWeb3();\r\n    const accounts = await web3.eth.getAccounts();\r\n    const depositsRecorded = await contract\r\n    .getPastEvents\r\n    (\"validDeposit\",\r\n    {filter: {client: accounts[0]},\r\n    fromBlock: '24637147',\r\n    toBlock: 'latest'});\r\n    let depositRecord = [];\r\n      for (let i = 0; i < depositsRecorded.length; i++) {\r\n        let deposited = web3.utils.fromWei((depositsRecorded[i].returnValues.amount).toString(), \"ether\");\r\n        let block = await web3.eth.getBlock(depositsRecorded[i].blockNumber);\r\n        let date = block.timestamp;\r\n        depositRecord.push({\r\n          hash: depositsRecorded[i].transactionHash,\r\n          client: depositsRecorded[i].returnValues.client,\r\n          deposit: deposited,\r\n          timestamp: moment(new Date(date*1000)).locale('fr').format('LL'),\r\n          stamp: date\r\n        })\r\n      }\r\n      setTimeout(() => {\r\n        setRecord(depositRecord);\r\n      }, 1000)\r\n\r\n  }\r\n  // Function retrait\r\n  const Withdraw = async () => {\r\n    const contract = await getContract(ProxySimple);\r\n    const web3 = await getWeb3();\r\n    const amount = web3.utils.toWei(montant, 'ether');\r\n    const retirer = await contract.methods\r\n      .withdrawPending(amount)\r\n      .send({ from: account })\r\n      .on(\"error\", function (error) {\r\n        setMsg(\"error\");\r\n      })\r\n      .then(function (tx) {\r\n        setMsg(`Retrait ${montantRetirer}`);\r\n        console.log(tx);\r\n      });\r\n  }\r\n\r\n  return (\r\n\r\n    <Grid\r\n      direction=\"column\"\r\n      container\r\n      spacing={1}\r\n      style={{ paddingTop: \"50px\"}}\r\n    >\r\n    <Grid item>\r\n      <Grid className=\"cardContentHome\">\r\n        <img className=\"listStyle\" src=\"bank.png\" /> Solipay Deposit value : {total} DAI\r\n      </Grid>\r\n    </Grid>\r\n    <Grid\r\n      direction=\"row\"\r\n      container\r\n      spacing={7}\r\n      style={{ paddingTop: \"40px\" }}\r\n    >\r\n    <Grid item xs>\r\n        <Grid className=\"cardContentLeft\">\r\n              <img className=\"listStyle\" src=\"money-bag.png\" /> Deposited Amount : {deposit} DAI\r\n              <br></br>\r\n              <br></br>\r\n              <img className=\"listStyle\" src=\"rocket.png\" /> APY : 5 %\r\n              <br></br>\r\n              <br></br>\r\n              <img className=\"listStyle\" src=\"vote.png\" /> Voting Power : {share} %\r\n              <br></br>\r\n              <br></br>\r\n              <img className=\"listStyle\" src=\"timer.png\" /> Time Lock : 4 months\r\n      </Grid>\r\n    </Grid>\r\n    <Grid item xs>\r\n        <Grid className=\"cardContentRight\">\r\n          <img className=\"listStyle\" src=\"gone$.png\" /> Amount\r\n            <br></br>\r\n            <br></br>\r\n          <input\r\n            type=\"number\"\r\n            rowsMin={6}\r\n            id=\"standard-basic\"\r\n            label=\"Amount\"\r\n            onChange={({ target }) => setMontant(target.value)}\r\n          />\r\n          <br></br>\r\n          <br></br>\r\n          <ThemeProvider theme={theme}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => deposite()}\r\n          >\r\n            Deposit\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => Withdraw()}\r\n          >\r\n            Withdraw\r\n          </Button>\r\n        </ThemeProvider>\r\n          <br></br>\r\n          <br></br>\r\n      </Grid>\r\n    </Grid>\r\n  </Grid>\r\n    <Grid item>\r\n        <Grid className=\"cardContentCentered\">\r\n          Your Deposit History\r\n          <ul>\r\n            {record.map(record =>\r\n            <li key=\"{record}\"> Deposited {record.deposit} DAI the {record.timestamp} <br></br>transaction hash : {record.hash}</li>\r\n            )}\r\n          </ul>\r\n        </Grid>\r\n    </Grid>\r\n    <Grid className=\"homeText\"><b>Actual Project Funding</b>\r\n      <h5 style={{ color: \"red\" }}>\r\n    {activeStep === 3\r\n      ? \"A Voting Session to fund a new Project is live Now !\"\r\n      : \"\"\r\n    }\r\n  </h5>\r\n    </Grid>\r\n      <Card className=\"fundation\">\r\n        <CardActionArea>\r\n          <CardMedia\r\n            component=\"img\"\r\n            alt=\"Actual Funding Project\"\r\n            height=\"300\"\r\n            image=\"https://www.msf.fr/sites/default/files/styles/social_large/public/2018-02/background-presentation.jpg\"\r\n            title=\"Actual organisation\"\r\n            />\r\n          <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          Medecins sans Frontières\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          We provide medical assistance to people affected by conflict, epidemics, disasters, or exclusion from healthcare.\r\n          Our teams are made up of tens of thousands of health professionals, logistic and administrative staff - most of them hired locally.\r\n          Our actions are guided by medical ethics and the principles of impartiality, independence and neutrality.\r\n        </Typography>\r\n      </CardContent>\r\n    </CardActionArea>\r\n    <CardActions>\r\n    </CardActions>\r\n  </Card>\r\n    </Grid>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default Public;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, useTheme, ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AdminVoting from \"./UserVoting\";\r\nimport { TextareaAutosize } from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Borrow from \"./build/contracts/Borrow.json\";\r\nimport getWeb3 from \"./getWeb3\";\r\nimport { green, amber } from '@material-ui/core/colors';\r\n\r\nconst getContract = async (contract) => {\r\n  const web3 = await getWeb3();\r\n\r\n  // Get the contract instance.\r\n  const networkId = await web3.eth.net.getId();\r\n  const deployedNetwork = contract.networks[networkId];\r\n  const instance = new web3.eth.Contract(\r\n    contract.abi,\r\n    deployedNetwork && deployedNetwork.address\r\n  );\r\n\r\n  return instance;\r\n};\r\n\r\n\r\n  function TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n\r\n  function a11yProps(index) {\r\n    return {\r\n      id: `full-width-tab-${index}`,\r\n      'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\n  const theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n    secondary: amber,\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    maxWidth: 600,\r\n    maxheight: 500,\r\n  },\r\n  media: {\r\n    height: 200,\r\n  },\r\n}));\r\n\r\nfunction UserVoting({ account, setMsg }) {\r\n  const classes = useStyles();\r\n  const steps = [\r\n  \"Registering Voters\",\r\n  \"Registration proposal's Started\",\r\n  \"Registration proposal's Ended\",\r\n  \"Voting session started\",\r\n  \"Voting session Ended\",\r\n  \"Votes Tailed\"\r\n];\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [picture, setPicture] = useState(null);\r\n  const [value, setValue] = useState(0);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n  const getStep = async () => {\r\n    const contract = await getContract(Borrow);\r\n    const response = await contract.methods.status().call();\r\n    setActiveStep(Number(response));\r\n  }\r\n\r\n  getStep();\r\n  getVoters();\r\n}, []);\r\n\r\nfunction getStepContent(stepIndex) {\r\nswitch (stepIndex) {\r\n  case 0:\r\n    return \"Solipay is currently registering voters\";\r\n  case 1:\r\n    return \"Solipay is currently registering project proposals\";\r\n  case 2:\r\n    return \"Solipay is currently setting the voting session\";\r\n  case 3:\r\n    return \"Voting session is live now, vote for the project of your choice\";\r\n  case 4:\r\n    return \"Solipay is currently tailing votes\";\r\n  case 5:\r\n    return \"Here there is the new project to fund\";\r\n  default:\r\n    return \"Unknown stepIndex\";\r\n  }\r\n}\r\n\r\nconst getVoters =  async() => {\r\n    const contract = await getContract(Borrow);\r\n    const web3 = await getWeb3();\r\n    const entities = await contract\r\n    .getPastEvents\r\n    (\"EntityRegistered\",\r\n    {fromBlock: '24637147',\r\n    toBlock: 'latest'});\r\n    const voters = entities[0].returnValues.soliAddress;\r\n    const votersInfo = [];\r\n    for (let i = 0; i < voters.length; i++) {\r\n      let votingPower = await contract.methods.getVotersPower(voters[i]).call();\r\n      votingPower = web3.utils.fromWei(votingPower, \"ether\");\r\n      console.log(votingPower);\r\n      let id = await contract.methods.getVotersProp(voters[i]).call();\r\n      votersInfo.push({\r\n        voter: voters[i],\r\n        power: votingPower,\r\n        proposal: id,\r\n      })\r\n    }\r\n    setTimeout(() => {\r\n      setUsers(votersInfo);\r\n    }, 1000)\r\n\r\n\r\n    setUsers(voters);\r\n\r\n    };\r\n\r\nconst vote = async(Id) => {\r\n  const contract = await getContract(Borrow);\r\n  const web3 = await getWeb3();\r\n  const voted = await contract.methods\r\n  .addVote(Id)\r\n  .send({ from: account })\r\n  .on(\"error\", function (error) {\r\n    setMsg(\"error\");\r\n  })\r\n  .then(function (tx) {\r\n    setMsg(`Vote Cast !`);\r\n  });\r\n};\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n\r\n  return (\r\n          <Grid\r\n            direction=\"column\"\r\n            container\r\n            spacing={3}\r\n            style={{ paddingTop: \"50px\"}}\r\n          >\r\n          <ThemeProvider theme={theme}>\r\n          <Grid item>\r\n        <h4 className=\"homeText\">Voting Steps</h4>\r\n      </Grid>\r\n      <Grid item>\r\n        <Stepper activeStep={activeStep} alternativeLabel  style={{ backgroundColor:\"rgba(255, 255, 255, 0)\" }}>\r\n          {steps.map((label) => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        <br></br>\r\n      <h4 className=\"homeText\">{getStepContent(activeStep)}</h4>\r\n      </Grid>\r\n      </ThemeProvider>\r\n    <Grid item>\r\n      <Grid className=\"center\">\r\n        <ThemeProvider theme={theme}>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant=\"fullWidth\"\r\n              aria-label=\"full width tabs example\"\r\n            >\r\n              <Tab label=\"1.UNICEF\" {...a11yProps(0)} />\r\n              <Tab label=\"2.AMNESTY\" {...a11yProps(1)} />\r\n              <Tab label=\"3.GREENPEACE\" {...a11yProps(2)} />\r\n            </Tabs>\r\n          </AppBar>\r\n          <SwipeableViews\r\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n            index={value}\r\n            onChangeIndex={handleChangeIndex}\r\n          >\r\n            <TabPanel value={value} index={0} dir={theme.direction}>\r\n              <Card className={classes.root}>\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    className={classes.media}\r\n                    image=\"./cov19.jpeg\"\r\n                    title=\"unicef\"\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      UNICEF\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      The COVID-19 pandemic has upended the lives of children and their families across the globe.\r\n                      UNICEF is working with experts to promote facts over fear, bringing reliable guidance to parents,\r\n                      caregivers and educators, and partnering with front-line responders to ensure they have the information\r\n                      and resources they need to keep children healthy and learning.\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                  <Button size=\"large\" color=\"primary\" disabled={activeStep !== 3} onClick={() => vote(1)}>\r\n                    VOTE\r\n                  </Button>\r\n                  <Button size=\"large\" color=\"secondary\" href=\"https://www.msf.fr/decouvrir-msf/qui-sommes-nous\">\r\n                    Learn More\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} dir={theme.direction}>\r\n              <Card className={classes.root}>\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    className={classes.media}\r\n                    image=\"./amnesty.png\"\r\n                    title=\"amnesty\"\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      AMNESTY\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      Through our detailed research and determined campaigning,\r\n                      we help fight abuses of human rights worldwide. We bring torturers to justice.\r\n                      Change oppressive laws. And free people jailed just for voicing their opinion.\r\n                      Our experts do accurate, cross-checked research into human rights violations by\r\n                      governments and others worldwide. We use our analysis to influence and press governments,\r\n                       companies and decision-makers to do the right thing.\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                  <Button size=\"large\" color=\"primary\" disabled={activeStep !== 3} onClick={() => vote(2)}>\r\n                    VOTE\r\n                  </Button>\r\n                  <Button size=\"large\" color=\"secondary\" href=\"https://www.amnesty.org/en/what-we-do/\">\r\n                    Learn More\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2} dir={theme.direction}>\r\n              <Card className={classes.root}>\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    className={classes.media}\r\n                    image=\"./greenPeace.jpeg\"\r\n                    title=\"greenpeace\"\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      GREENPEACE\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                      GREENPEACE\r\n                    >\r\n                    We want to live on a healthy, peaceful planet.\r\n                    A planet where forests flourish, oceans are full of life and where once-threatened animals safely roam.\r\n                    Where our quality of life is measured in relationships, not things. Where our food is delicious,\r\n                     nutritious, and grown with love. Where the air we breathe is fresh and clear. Where our energy is as clean as a mountain stream. Where everyone has the security, dignity and joy we all deserve.\r\n                     It’s all possible. We can’t make it happen alone, but have no doubt: We can do it together.\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                  <Button size=\"large\" color=\"primary\" disabled={activeStep !== 3} onClick={() => vote(3)}>\r\n                    VOTE\r\n                  </Button>\r\n                  <Button size=\"large\" color=\"secondary\" href=\"https://www.greenpeace.org/international/explore/about/about-us/\">\r\n                    Learn More\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </TabPanel>\r\n          </SwipeableViews>\r\n        </div>\r\n    </ThemeProvider>\r\n    </Grid>\r\n  </Grid>\r\n  <Grid item>\r\n      <Grid className=\"cardContentCentered\">\r\n        Voters List\r\n        <ul>\r\n          {users.map(users =>\r\n          <li key=\"{users}\"> Address {users.voter} Voting Power {users.power} Voted {users.proposal}</li>\r\n          )}\r\n        </ul>\r\n      </Grid>\r\n  </Grid>\r\n</Grid>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default UserVoting;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles, ThemeProvider, createMuiTheme, useTheme } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport UserVoting from \"./UserVoting\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Borrow from \"./build/contracts/Borrow.json\";\r\nimport getWeb3 from \"./getWeb3\";\r\nimport getMessageError from \"./getMessageError\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { green, amber } from '@material-ui/core/colors';\r\n\r\nconst theme = createMuiTheme({\r\npalette: {\r\n  primary: green,\r\n  secondary: amber,\r\n  },\r\n  });\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst getContract = async (contract) => {\r\n  const web3 = await getWeb3();\r\n\r\n  // Get the contract instance.\r\n  const networkId = await web3.eth.net.getId();\r\n  const deployedNetwork = contract.networks[networkId];\r\n  const instance = new web3.eth.Contract(\r\n    contract.abi,\r\n    deployedNetwork && deployedNetwork.address\r\n  );\r\n\r\n  return instance;\r\n};\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"Registering Voters\",\r\n    \"Registration proposal's Started\",\r\n    \"Registration proposal's Ended\",\r\n    \"Voting session started\",\r\n    \"Voting session Ended\",\r\n    \"Votes Tailed\"\r\n  ];\r\n}\r\n\r\n\r\n\r\nfunction AdminVoting({ account, setMsg }) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [addr, setAddr] = useState(0);\r\n  const [description, setDescription] = useState(0);\r\n  const [winning, setWinning] = useState(0);\r\n  const steps = getSteps();\r\n\r\n  useEffect(() => {\r\n  const getStep = async () => {\r\n    const contract = await getContract(Borrow);\r\n    const response = await contract.methods.status().call();\r\n    setActiveStep(Number(response));\r\n  }\r\n\r\n  getStep();\r\n}, []);\r\n  const next = async () => {\r\n    const contract = await getContract(Borrow);\r\n    const web3 = await getWeb3();\r\n    const toNextStep = await contract.methods\r\n    .nextStep()\r\n    .send({ from: account })\r\n    .on(\"error\", function (error) {\r\n      setMsg(\"error\");\r\n    })\r\n    .then(function (tx) {\r\n      setMsg(`passed to the next step`);\r\n      setActiveStep(activeStep + 1);\r\n    });\r\n  };\r\n\r\n  const registeringVoters = async () => {\r\n    const contract = await getContract(Borrow);\r\n    const web3 = await getWeb3();\r\n    const voters = await contract.methods\r\n      .setEntity()\r\n      .send({ from: account})\r\n      .on(\"error\", function (error) {\r\n        setMsg(\"error\");\r\n      })\r\n      .then(function (tx) {\r\n        setMsg(`voters are registred`);\r\n        console.log(tx);\r\n\r\n      });\r\n    };\r\n\r\n    const registerProposal = async () => {\r\n      const contract = await getContract(Borrow);\r\n      const web3 = await getWeb3();\r\n      const voters = await contract.methods\r\n        .registerLoanRequest(description, addr)\r\n        .send({ from: account})\r\n        .on(\"error\", function (error) {\r\n          setMsg(\"error\");\r\n        })\r\n        .then(function (tx) {\r\n          setMsg(`proposal registered`);\r\n          console.log(tx);\r\n\r\n        });\r\n      };\r\n\r\n\r\n\r\n    const winningProposal = async() => {\r\n      const contract = await getContract(Borrow);\r\n      const web3 = await getWeb3();\r\n      const winning = await contract.methods\r\n        .getWinningProposal()\r\n        .send({ from: account })\r\n        .on(\"error\", function (error) {\r\n          setMsg(\"error\");\r\n        })\r\n        .then(function (tx) {\r\n          setMsg(`wining proposal setted`);\r\n          console.log(tx);\r\n\r\n        });\r\n\r\n      };\r\n\r\n  return (\r\n    <Grid\r\n       direction=\"column\"\r\n       container\r\n       spacing={3}\r\n       style={{ paddingTop: \"20px\"}}\r\n     >\r\n      <ThemeProvider theme={theme}>\r\n      <Grid className=\"totalgrid\">\r\n          <img className=\"imagesolipayadminvoting\" src=\"solipay.png\" />\r\n      </Grid>\r\n          <Stepper\r\n            activeStep={activeStep}\r\n            alternativeLabel\r\n            style={{ backgroundColor:\"rgba(255, 255, 255, 0)\" }}\r\n          >\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => next()}\r\n                  >\r\n                    NEXT\r\n                  </Button>\r\n          </Grid>\r\n          <Grid\r\n             direction=\"row\"\r\n             container\r\n             spacing={3}\r\n             style={{ paddingTop: \"20px\", paddingLeft: \"500px\"}}\r\n           >\r\n           <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => registeringVoters()}\r\n                  >\r\n                    SET VOTERS\r\n                  </Button>\r\n            </Grid>\r\n            <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => winningProposal()}\r\n                  >\r\n                    winning proposal\r\n                  </Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n\r\n    <Grid item>\r\n      <TextareaAutosize style={{backgroundColor:\"white\",borderRadius:\"1%\", width:\"500px\" ,height:\"200px\"}}\r\n        rowsMax={4}\r\n        aria-label=\"maximum height\"\r\n        placeholder=\"register your proposal\"\r\n        onChange={({ target }) => setDescription(target.value)}\r\n      />\r\n    </Grid>\r\n    <Grid item>\r\n      <TextField\r\n        rowsMin={4}\r\n        id=\"standard-basic\"\r\n        label=\"AdresseTokenB\"\r\n        placeholder=\"Project Ethereum address...\"\r\n        onChange={({ target }) => setAddr(target.value)}\r\n      />\r\n    </Grid>\r\n    <Grid item>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => registerProposal()}>\r\n        enregistrer la proposition{\" \"}\r\n      </Button>\r\n    </Grid>\r\n    </ThemeProvider>\r\n    </Grid>\r\n  );\r\n}\r\nexport default AdminVoting;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useWallet, UseWalletProvider } from 'use-wallet';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport getWeb3 from \"./getWeb3\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\r\nimport \"./App.css\";\r\nimport Admin from \"./Admin\";\r\nimport Public from \"./Public\";\r\nimport UserVoting from \"./UserVoting\";\r\nimport AdminVoting from \"./AdminVoting\";\r\nimport ProxySimple from \"./build/contracts/ProxySimple.json\";\r\n\r\nconst CHAIN_ID = 42;\r\n\r\nfunction App() {\r\n  const wallet = useWallet();\r\n\r\n  const [account, setAccount] = useState(null);\r\n  const [msg, setMsg] = useState();\r\n\r\n  const getContract = async (contract) => {\r\n    const web3 = await getWeb3();\r\n\r\n    // Get the contract instance.\r\n    const networkId = await web3.eth.net.getId();\r\n    const deployedNetwork = contract.networks[networkId];\r\n    const instance = new web3.eth.Contract(\r\n      contract.abi,\r\n      deployedNetwork && deployedNetwork.address\r\n    );\r\n\r\n    return instance;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (window.ethereum && window.ethereum.on) {\r\n      window.ethereum.on('accountsChanged', () => {\r\n        wallet.connect();\r\n      });\r\n    }\r\n  }, [wallet]);\r\n\r\n  useEffect(() => {\r\n    const getAccounts = async () => {\r\n      // Get network provider and web3 instance.\r\n      const web3 = await getWeb3();\r\n      // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n      setAccount(accounts[0])\r\n    };\r\n\r\n    getAccounts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AppBar position=\"static\" className=\"AppBar\">\r\n        <Toolbar className=\"AppBar\" >\r\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"home\" href=\"/\" >\r\n            <img width=\"100\" src=\"solipay.png\" href=\".\" alt=\"solipay-Logo\" />\r\n          </IconButton>\r\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"vote\" href=\"/uservoting\" >\r\n            <img width=\"70\" src=\"vote.png\" href=\".\" alt=\"vote-Logo\"/>\r\n          </IconButton>\r\n          <IconButton edge=\"end\" color=\"inherit\" aria-label=\"github\" href=\"https://github.com/Morpheus-Tezos/Solipay\" >\r\n            <GitHubIcon fontSize=\"large\"/>\r\n          </IconButton>\r\n            <Button color=\"inherit\">{account}</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Public account={account} setMsg={setMsg} />\r\n          </Route>\r\n          <Route path=\"/admin\">\r\n            <Admin account={account} setMsg={setMsg} />\r\n          </Route>\r\n          <Route exact path=\"/adminvoting\">\r\n            <AdminVoting account={account} setMsg={setMsg} />\r\n          </Route>\r\n          <Route exact path=\"/uservoting\">\r\n            <UserVoting account={account} setMsg={setMsg} />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n      <Snackbar autoHideDuration={6000} open={!!msg} onClose={() => setMsg(null)} message={msg}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default () => (\r\n  <UseWalletProvider chainId={CHAIN_ID}>\r\n    <App/>\r\n  </UseWalletProvider>\r\n)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}